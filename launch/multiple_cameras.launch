<?xml version="1.0"?>
<!-- launch file for a a BlackFly camera and a Boson camera -->
<launch>
  <!-- prefix for all topics published by this launcher -->
  <arg name="namespace" default="flir_boson"/>
  <!-- frame ID for identifying source when looking at image topic -->
  <arg name="boson_frame_id" default="boson_camera"/>
  <arg name="blackfly_frame_id" default="blackfly_camera"/>

  <!-- camera type notifies the application to get the first camera whose
  name contains the default value -->
  <arg name="left_type" default="blackfly" />
  <arg name="right_type" default="boson" />

  <!-- topic frame rate - limited by the max frame rate of the camera -->
  <arg name="frame_rate" default="60.0"/>

  <!-- valid values are MONO_8, MONO_16, or COLOR_8 for blackfly
  and only MONO_8 and MONO_16 for boson -->
  <arg name="blackfly_video_format" default="COLOR_8"/>
  <arg name="boson_video_format" default="MONO_8"/>

  <!-- sets width and height for BlackFly. Was having bandwidth issues
  running 2 cameras at once with full BlackFly resolution -->
  <arg name="width" default="800" />
  <arg name="height" default="600" />

  <!-- location of the camera calibration file -->
  <arg name="camera_info_url" default="package://flir_boson_ethernet/example_calibrations/BlackFlyS.yaml"/>
  <arg name="boson_info_url" default="package://flir_boson_ethernet/example_calibrations/Boson640.yaml"/>

  <!-- group everything into the same namespace (necessary for the nodelet
  manager to work properly -->
  <group ns="$(arg namespace)">
    <!-- Nodelet manager coordinates the camera controlling nodelets -->
    <node pkg="nodelet" 
          type="nodelet"
          name="nodelet_manager"
          args="manager"
          output="screen"/>
    <!-- left camera set to Blackfly -->
    <node pkg="nodelet" 
          type="nodelet"
          name="left_camera_node"
          args="load flir_boson_ethernet/CameraController nodelet_manager"
          output="screen">
      <!-- remap all publishers to the 'left' sub-namespace -->
      <remap from="/$(arg namespace)" to="/$(arg namespace)/left" />
      <!-- remap all subscribers to the 'left' sub-namespace -->
      <remap from="pixel_format" to="left/pixel_format" />
      <remap from="auto_ffc" to="left/auto_ffc" />
      <remap from="ffc" to="left/ffc" />

      <param name="frame_id" type="str" value="$(arg blackfly_frame_id)"/>
      <param name="camera_type" type="str" value="$(arg left_type)" />
      <param name="frame_rate" type="double" value="$(arg frame_rate)"/>
      <param name="video_format" type="str" value="$(arg blackfly_video_format)"/>
      <param name="camera_info_url" type="str" value="$(arg camera_info_url)"/>
      <param name="width" type="int" value="$(arg width)" />
      <param name="height" type="int" value="$(arg height)" />
    </node>
    <!-- right camera controller set to boson -->
    <node pkg="nodelet" 
          type="nodelet"
          name="right_camera_node"
          args="load flir_boson_ethernet/CameraController nodelet_manager"
          output="screen">
      <remap from="/$(arg namespace)" to="/$(arg namespace)/right" />
      <remap from="pixel_format" to="right/pixel_format" />
      <remap from="auto_ffc" to="right/auto_ffc" />
      <remap from="ffc" to="right/ffc" />

      <param name="frame_id" type="str" value="$(arg boson_frame_id)"/>
      <param name="camera_type" type="str" value="$(arg right_type)" />
      <param name="frame_rate" type="double" value="$(arg frame_rate)"/>
      <param name="video_format" type="str" value="$(arg boson_video_format)"/>
      <param name="camera_info_url" type="str" value="$(arg boson_info_url)"/>
    </node>
  </group>

  <!-- Optional: show two separate image view panes for concurrent viewing -->
  <node name="left_view"
        pkg="image_view"
        type="image_view"
        output="screen">
    <remap from="image" to="flir_boson/left/image_raw" />
  </node>
  <node name="right_view"
        pkg="image_view"
        type="image_view"
        output="screen">
    <remap from="image" to="flir_boson/right/image_raw" />
  </node>

</launch>
